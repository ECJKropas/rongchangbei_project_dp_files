name: Auto Release DP Files

permissions:
  contents: write  

on:
  push:
    paths:
      - 'dp_files/**'
    branches:
      - main  # 指定触发分支

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 获取完整历史记录

      - name: Setup environment
        id: setup
        run: |
          # 生成唯一的版本标签 (vYYYYMMDD-HHMMSS)
          TIMESTAMP=$(date -u +"%Y%m%d-%H%M%S")
          echo "RELEASE_TAG=v$TIMESTAMP" >> $GITHUB_ENV
          echo "Using release tag: $RELEASE_TAG"

      - name: Generate manifest
        run: |
          # 创建临时目录
          mkdir -p release_assets
          
          # 生成 manifest.json
          echo '{ "last_updated": "$(date -u +"%Y-%m-%dT%H:%M:%SZ")", "resources": [' > manifest.json
          
          # 遍历所有 .dp 文件
          find dp_files -name "*.dp" -print0 | while IFS= read -r -d '' file; do
            # 计算 SHA256
            sha=$(sha256sum "$file" | awk '{print $1}')
            
            # 获取相对路径
            rel_path="${file#dp_files/}"
            
            # 添加到 manifest
            echo "{
              \"id\": \"${rel_path%.*}\",
              \"file\": \"$(basename "$file")\",
              \"path\": \"$rel_path\",
              \"url\": \"https://github.com/${{ github.repository }}/releases/download/${{ env.RELEASE_TAG }}/$(basename "$file")\",
              \"sha256\": \"$sha\"
            }," >> manifest.json
            
            # 复制到发布目录
            cp "$file" "release_assets/"
          done
          
          # 完成 JSON 格式
          sed -i '$ s/,$//' manifest.json
          echo ']}' >> manifest.json
          
          # 添加 manifest 到发布资产
          cp manifest.json release_assets/

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.RELEASE_TAG }}  # 使用生成的唯一标签
          name: "DP Resources Release ${{ env.RELEASE_TAG }}"
          body: "Automated release of .dp resource files"
          files: |
            release_assets/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
